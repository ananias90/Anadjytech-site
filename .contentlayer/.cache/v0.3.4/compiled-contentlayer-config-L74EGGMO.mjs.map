{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n    name: 'Post',\r\n    filePathPattern: `posts/*.mdx`,\r\n    contentType: 'mdx',\r\n    fields: {\r\n        id: { type: 'number', required: true },\r\n        title: { type: 'string', required: true },\r\n        excerpt: { type: 'string', required: true },\r\n        author: { type: 'string', required: true, default: 'AnadjyTech Editorial' },\r\n        date: { type: 'date', required: true },\r\n        readTime: { type: 'string', required: true },\r\n        category: { type: 'string', required: true },\r\n        difficulty: { type: 'string', required: true, default: 'Beginner' },\r\n        badges: { type: 'list', of: { type: 'string' }, required: true },\r\n        hero: { type: 'string', required: true },\r\n        thumbnail: { type: 'string', required: true },\r\n        published: { type: 'boolean', required: true, default: true },\r\n        featured: { type: 'boolean', required: true, default: false },\r\n        hidden: { type: 'boolean', required: true, default: false },\r\n        publishedAt: { type: 'date', required: true },\r\n        readMins: { type: 'number', required: true },\r\n        image: { type: 'string', required: true },\r\n        tags: { type: 'list', of: { type: 'string' }, required: true },\r\n        specs: {\r\n            type: 'json',\r\n            required: false,\r\n            default: {\r\n                PriceRange: '',\r\n                Category: '',\r\n                ProductsTested: '',\r\n                TestingPeriod: ''\r\n            }\r\n        },\r\n        keyTakeaways: { type: 'list', of: { type: 'string' }, required: true },\r\n        pros: { type: 'list', of: { type: 'string' }, required: true },\r\n        cons: { type: 'list', of: { type: 'string' }, required: true },\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n            type: 'string',\r\n            resolve: (post) => post._raw.sourceFileName.replace(/\\.mdx$/, ''),\r\n        },\r\n        url: {\r\n            type: 'string',\r\n            resolve: (post) => `/blog/${post._raw.sourceFileName.replace(/\\.mdx$/, '')}`,\r\n        },\r\n    },\r\n}))\r\n\r\nexport default makeSource({\r\n    contentDirPath: 'content',\r\n    documentTypes: [Post],\r\n})\r\n\r\n\r\n\r\n\r\n// import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\n\r\n// export const Post = defineDocumentType(() => ({\r\n//     name: 'Post',\r\n//     filePathPattern: `posts/*.mdx`,\r\n//     contentType: 'mdx',\r\n//     fields: {\r\n//         title: { type: 'string', required: true },\r\n//         date: { type: 'date', required: true },\r\n//         excerpt: { type: 'string', required: true },\r\n//         hero: { type: 'string', required: false },\r\n//     },\r\n//     computedFields: {\r\n//         slug: {\r\n//             type: 'string',\r\n//             resolve: (post) => post._raw.sourceFileName.replace(/\\.mdx$/, ''),\r\n//         },\r\n//     },\r\n// }))\r\n\r\n// export default makeSource({\r\n//     contentDirPath: 'content',\r\n//     documentTypes: [Post],\r\n// })\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,IAAI,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACrC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,QAAQ,EAAE,MAAM,UAAU,UAAU,MAAM,SAAS,uBAAuB;AAAA,IAC1E,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,YAAY,EAAE,MAAM,UAAU,UAAU,MAAM,SAAS,WAAW;AAAA,IAClE,QAAQ,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC/D,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,WAAW,EAAE,MAAM,WAAW,UAAU,MAAM,SAAS,KAAK;AAAA,IAC5D,UAAU,EAAE,MAAM,WAAW,UAAU,MAAM,SAAS,MAAM;AAAA,IAC5D,QAAQ,EAAE,MAAM,WAAW,UAAU,MAAM,SAAS,MAAM;AAAA,IAC1D,aAAa,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC5C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC7D,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,cAAc,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IACrE,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC7D,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,EACjE;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IACpE;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,SAAS,KAAK,KAAK,eAAe,QAAQ,UAAU,EAAE,CAAC;AAAA,IAC9E;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AACxB,CAAC;",
  "names": []
}
